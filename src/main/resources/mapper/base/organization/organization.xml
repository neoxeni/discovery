<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mercury.discovery.base.organization.service.OrganizationRepository">
    <select id="findDepartmentAll" resultType="CamelMap">
        SELECT *
        FROM client_department
        WHERE client_id = #{clientId}
        -- AND use_yn = 'Y'
        ORDER BY sort
    </select>

    <select id="findEmployeeAll" resultType="CamelMap">
        SELECT e.*
        FROM client_user e LEFT JOIN client_department d ON e.department_id = d.id
        WHERE e.client_id = #{clientId}
        ORDER BY e.sort
    </select>

    <select id="findDepartmentByDepartmentKey" resultType="Department">
        SELECT *
        FROM client_department
        WHERE department_key = #{departmentKey}
          AND client_id = #{clientId}
    </select>

    <select id="findDepartment" resultType="Department">
        SELECT *
        FROM client_department
        WHERE id = #{id}
          AND client_id = #{clientId}
    </select>

    <insert id="insertDepartment" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO client_department (
            parent_department_key, department_key, name, sort, use_yn, created_by, created_at, updated_by , updated_at, client_id
        ) VALUES (
            #{parentDepartmentKey}, #{departmentKey}, #{name}, #{sort}, #{useYn}, #{createdBy}, #{createdAt}, #{updatedBy}, #{updatedAt}, #{clientId}
        )
    </insert>

    <update id="updateDepartment">
        UPDATE client_department SET
            parent_department_key = #{parentDepartmentKey}
            , name = #{name}
            , sort = #{sort}
            , use_yn = #{useYn}
            , updated_by = #{updatedBy}
            , updated_at = #{updatedAt}
        WHERE id = #{id}
          AND client_id = #{clientId}
    </update>

    <update id="changeEmployeeDepartment">
        UPDATE cmm_emp SET
            dept_no = #{deptNo}
        WHERE emp_no = #{empNo}
          AND client_id = #{clientId}
    </update>

    <update id="changeDepartmentDepartment">
        UPDATE cmm_dept SET
            p_dept_no = #{pDeptNo}
        WHERE dept_no = #{deptNo}
          AND client_id = #{clientId}
    </update>

    <select id="findDepartmentGroups" resultType="UserGroup">
        <include refid="common.sql.with" /> cte(dept_no, p_dept_no, dept_nm) AS (
        SELECT
        a.dept_no,
        a.p_dept_no,
        a.dept_nm
        FROM client_department a
        WHERE a.id = #{id}
        AND a.client_id = #{clientId}

        UNION ALL

        SELECT
        a.dept_no,
        a.p_dept_no,
        a.dept_nm
        FROM client_department a JOIN cte b ON b.p_dept_no = a.dept_no
        AND a.client_id = #{clientId}
        )

        SELECT
        g.group_id,
        g.code,
        g.name,
        cgm.map_no,
        'D' as target,
        cgm.target_id,
        g.client_id
        FROM cmm_group_mapping cgm JOIN cmm_group g ON cgm.group_id = g.group_id
        WHERE target='D'
        AND target_id IN (
        SELECT dept_no
        FROM cte
        )

    </select>
</mapper>
