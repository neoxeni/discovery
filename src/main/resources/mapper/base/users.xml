<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mercury.discovery.base.users.service.UserRepository">
    <sql id="user_all">
        ${l}.username,
        ${l}.password,
        ${l}.password_err_count,
        ${l}.password_updated_at,
        ${l}.last_login_at,
        ${l}.last_logout_at,
        ${l}.last_ip_address,

        ${e}.id,
        ${e}.name,
        ${e}.nickname,
        ${e}.phone,
        ${e}.email,
        ${e}.identification,
        ${e}.position_cd,
        ${e}.duty_cd,
        ${e}.sort,
        ${e}.status,

        ${e}.created_by,
        ${e}.created_at,
        ${e}.updated_by,
        ${e}.updated_at,
        ${e}.user_key,

        ${e}.client_id,
        ${e}.department_id
    </sql>

    <!--로그인 전용-->
    <select id="findByUserIdForLogin" resultType="AppUser">
        SELECT
        <include refid="user_all">
            <property name="e" value="e"/>
            <property name="l" value="l"/>
        </include>
        FROM client_user e JOIN client_user_login l ON e.id = l.user_id
        WHERE l.username = #{userId}
    </select>

    <select id="findByUserId" resultType="AppUser">
        SELECT
        <include refid="user_all">
            <property name="e" value="e"/>
            <property name="l" value="l"/>
        </include>
        FROM client_user e JOIN client_user_login l ON e.id = l.user_id
        WHERE e.id = #{id}
    </select>

    <select id="findByUserKey" resultType="AppUser">
        SELECT
        <include refid="user_all">
            <property name="e" value="e"/>
            <property name="l" value="l"/>
        </include>
        FROM client_user e JOIN client_user_login l ON e.id = l.user_id
            LEFT OUTER JOIN client_department dept ON e.department_id = dept.id
            LEFT OUTER JOIN cmm_code postn ON e.position_cd = postn.code AND postn.client_id = e.client_id  AND postn.div_cd = 'OR02'
            LEFT OUTER JOIN cmm_code duty ON e.duty_cd = duty.code  AND duty.client_id = e.client_id AND duty.div_cd = 'OR01'
        WHERE e.user_key = #{userKey}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO client_user(
             name, nickname, phone, email
            , identification, extension_no, position_cd, duty_cd, sort, status
            , created_by, created_at, updated_by, updated_at, user_key, client_id, department_id
        ) VALUES (
            #{name}, #{nickname}, #{phone}, #{email}
            , #{identification}, #{extensionNo}, #{positionCd}, #{dutyCd}, #{sort}, #{status}
            , #{createdBy}, #{createdAt}, #{updatedBy}, #{updatedAt}, #{userKey}, #{clientId}, #{departmentId}
         )
    </insert>

    <update id="update">
        UPDATE client_user SET
            name = #{name}
            , nickname = #{nickname}
            , phone = #{phone}
            , email = #{email}
            , identification = #{identification}
            , extension_no = #{extensionNo}
            , position_cd = #{positionCd}
            , duty_cd = #{dutyCd}
            , sort  = #{sort}
            , status = #{status}
            , updated_by = #{updatedBy}
            , updated_at = #{updatedAt}
            , department_id = #{departmentId}
        WHERE id = #{id}
          AND client_id= #{clientId}
    </update>

    <delete id="delete">
        UPDATE client_user SET
            status = 'INACTIVE'
        WHERE id = #{id}
          AND client_id = #{clientId}
    </delete>

    <select id="find" resultType="AppUser">
        SELECT  <include refid="user_all">
        <property name="e" value="e"/>
        <property name="l" value="l"/>
        <property name="dept" value="dept"/>
        <property name="postn" value="postn"/>
        <property name="duty" value="duty"/>
        </include>
        FROM cmm_emp e
            JOIN cmm_login l ON e.emp_no = l.emp_no
            LEFT OUTER JOIN cmm_dept dept ON e.dept_no = dept.dept_no
            LEFT OUTER JOIN cmm_code postn ON e.postn_cd = postn.code AND postn.client_id = e.client_id  AND postn.div_cd = 'OR02'
            LEFT OUTER JOIN cmm_code duty ON e.duty_cd = duty.code AND duty.client_id = e.client_id AND duty.div_cd = 'OR01'
        WHERE e.client_id = #{clientId}
        <choose>
            <when test="empNo != null">
                AND e.emp_no = #{empNo}
            </when>
            <when test="grpCd != null">
                AND e.emp_no IN (
                    SELECT
                        b.data_no as emp_no
                    FROM cmm_group a
                        JOIN cmm_group_map b on a.grp_no  = b.grp_no
                    WHERE a.client_id = #{clientId}
                    AND a.grp_cd = #{grpCd}
                    AND b.data_gbn = 'E'

                    UNION ALL

                    SELECT
                        emp_no
                    FROM cmm_emp
                    WHERE dept_no IN (
                        SELECT
                            b.data_no
                        FROM cmm_group a
                            JOIN cmm_group_map b on a.grp_no  = b.grp_no
                        WHERE a.client_id = #{clientId}
                        AND a.grp_cd = #{grpCd}
                        AND b.data_gbn = 'D'
                    )
                )
            </when>
        </choose>

        <if test="empNm != null">
            AND e.emp_nm = #{empNm}
        </if>
    </select>

    <select id="findRolesByEmpNo" resultType="UserRole">
        SELECT cg.grp_no, cg.grp_cd, cg.grp_nm, cgm.map_no, cgm.data_gbn, cgm.data_no, cg.client_id
        FROM cmm_group_map cgm JOIN cmm_group cg ON cgm.grp_no = cg.grp_no
        WHERE data_gbn = 'E'
        AND data_no = #{empNo}
    </select>

    <select id="findAppRolesByEmpNo" resultType="UserAppRole">
        SELECT ag.app_grp_no, ag.app_grp_cd, ag.app_grp_nm, agm.map_no, agm.data_gbn, agm.data_no, ag.client_id
        FROM cmm_app_group_map agm JOIN cmm_app_group ag ON agm.app_grp_no = ag.app_grp_no
        WHERE data_gbn = 'E'
        AND data_no = #{empNo}
    </select>

    <insert id="insertLogin">
        INSERT INTO client_user_login
            ( username, password, password_err_count, user_id )
        VALUES(
            #{username}, #{password}, 0 , #{id}
        )
    </insert>

    <insert id="insertLoginHistory">
        INSERT INTO client_user_login_hist (
            user_id, login_at, last_ip_address, client_id
        )VALUES(
            #{id}, #{lastLoginAt} ,#{lastIpAddress}, #{clientId}
        )
    </insert>

    <update id="updateLoginInfo">
        UPDATE client_user_login SET
            password_err_count = 0,
            last_login_at = #{lastLoginAt},
            last_ip_address = #{lastIpAddress}
        WHERE user_id = #{id}
    </update>

    <update id="updateLogoutInfo">
        UPDATE client_user_login SET
            last_logout_at = #{lastLogoutAt}
        WHERE user_id = #{id}
    </update>

    <update id="plusPasswordErrorCount">
        UPDATE client_user_login SET
            password_err_count = password_err_count + 1
        WHERE username = #{username}
    </update>

    <update id="resetPassword">
        UPDATE client_user_login SET
            password = #{password},
            password_err_count = 0,
            password_updated_at = #{passwordUpdatedAt}
        WHERE user_id = #{id}
    </update>
</mapper>
