<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mercury.discovery.base.group.service.GroupRepository">

    <select id="findGroup" resultType="Group">
        SELECT *
        FROM cmm_group
        WHERE client_id = #{clientId} AND id = #{id}
    </select>

    <select id="findGroupAll" resultType="Group">
        SELECT g.*
        FROM cmm_group g
        WHERE g.client_id = #{clientId}
        <if test='useYn != null and useYn != ""'>
            AND g.use_yn = #{useYn}
        </if>

        ORDER BY g.grp_nm
    </select>

    <insert id="insertGroup" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO cmm_group (
            grp_cd, grp_nm ,use_yn, upd_enable_yn, created_by, created_at , updated_by, updated_at ,client_id
        ) VALUES (
            #{grpCd} ,#{grpNm} , #{useYn}, #{updEnableYn}, #{createdBy}, #{createdAt}, #{createdBy}, #{createdAt} ,#{clientId}
        )
    </insert>

    <update id="updateGroup">
        UPDATE cmm_group SET
        grp_nm = #{grpNm}
        <if test='grpCd != null and grpCd != ""'>
            ,grp_cd = #{grpCd}
        </if>
        <if test='updEnableYn != null and updEnableYn != ""'>
            ,upd_enable_yn = #{updEnableYn}
        </if>
        ,use_yn = #{useYn}
        ,updated_at = #{updatedAt}
        ,updated_by = #{updatedBy}
        WHERE grp_no = #{grpNo}
        AND client_id = #{clientId}
    </update>

    <delete id="deleteGroup">
        DELETE
        FROM cmm_group
        WHERE id = #{id}
        AND client_id = #{clientId}
    </delete>

    <select id="findGroupMappingsByGrpNo" resultType="GroupMappingResponseDto">
        WITH wd AS(
        SELECT map_no, grp_no, data_gbn, data_no, created_by, created_at, use_yn, sort
        FROM cmm_group_map
        WHERE grp_no = #{groupMappingRequestDto.grpNo}
        ORDER BY data_gbn
        )

        SELECT map_no, grp_no, data_gbn, data_no, created_at, created_by, use_yn, sort, data_nm, tooltip, data_cd
        FROM (
        SELECT wd.map_no, wd.grp_no, wd.data_gbn, wd.created_at, wd.created_by, wd.use_yn, wd.sort, e.emp_no AS data_no,
        CONCAT(CONCAT(e.emp_nm,' '),(CASE WHEN postn.name IS NULL THEN '' ELSE postn.name END)) AS data_nm,
        CONCAT(CONCAT((CASE WHEN dept.dept_nm IS NULL THEN '' ELSE dept.dept_nm END),' '), (CASE WHEN duty.name IS NULL THEN '' ELSE duty.name END)) as tooltip,
        e.cmpny_emp_cd AS data_cd
        FROM wd JOIN cmm_emp e ON wd.data_no = e.emp_no AND wd.data_gbn = 'E'
        LEFT OUTER JOIN cmm_code postn ON e.postn_cd = postn.code  AND postn.div_cd = 'OR02'
        LEFT OUTER JOIN cmm_code duty ON e.duty_cd = duty.code  AND duty.div_cd = 'OR01'
        LEFT OUTER JOIN cmm_dept dept ON e.dept_no = dept.dept_no
        WHERE e.client_id =  #{groupMappingRequestDto.clientId}
        UNION
        SELECT wd.map_no, wd.grp_no, wd.data_gbn, wd.created_at, wd.created_by, wd.use_yn, wd.sort, d.dept_no AS data_no, d.dept_nm AS data_nm,
        (CASE WHEN parent.dept_nm IS NULL THEN '' ELSE parent.dept_nm END) AS tooltip,
        d.dept_cd AS data_cd
        FROM wd JOIN cmm_dept d on  wd.data_no = d.dept_no AND wd.data_gbn = 'D'
        LEFT OUTER JOIN cmm_dept parent ON parent.dept_no = d.p_dept_no
        WHERE d.client_id = #{groupMappingRequestDto.clientId}
        )x
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test='groupMappingRequestDto.dataGbn != null and groupMappingRequestDto.dataGbn != ""'>
                AND data_gbn = #{groupMappingRequestDto.dataGbn}
            </if>
            <if test='groupMappingRequestDto.dataNm != null and groupMappingRequestDto.dataNm != ""'>
                AND data_nm LIKE  CONCAT(CONCAT('%',#{groupMappingRequestDto.dataNm}),'%')
            </if>
        </trim>

        <include refid="common.sql.fragmentOrderBy">
            <property name="OrderBy" value="ORDER BY sort"/>
        </include>
    </select>

    <update id="insertGroupMappings" databaseId="oracle">
        INSERT INTO cmm_group_map (
        map_no, grp_no, data_gbn, data_no, created_by, created_at, use_yn, sort
        )
        SELECT sq_cmm_group_map.NEXTVAL AS map_no , T.* FROM (
        <foreach collection="collection" item="item" index="index" separator="union all">
            SELECT
            #{item.grpNo} as grp_no ,
            #{item.dataGbn} as data_gbn ,
            #{item.dataNo} as data_no ,
            #{item.createdBy} as created_by ,
            #{item.createdAt} as created_at ,
            #{item.useYn} as use_yn ,
            #{item.sort} as sort
            FROM SYS.DUAL
        </foreach>
        ) T
    </update>

    <insert id="insertGroupMappings" useGeneratedKeys="true" keyProperty="mapNo" databaseId="mysql">
        INSERT INTO cmm_group_map
        (grp_no, data_gbn, data_no, created_by, created_at, use_yn, sort)
        VALUES
        <foreach collection="collection" item="item" index="index" separator=",">
            (#{item.grpNo}, #{item.dataGbn}, #{item.dataNo}, #{item.createdBy}, #{item.createdAt}, #{item.useYn}, #{item.sort})
        </foreach>
    </insert>

    <delete id="deleteGroupMappings">
        DELETE
        FROM cmm_group_map
        WHERE map_no IN
        <foreach collection="groupMappingNos" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
        AND #{clientId} = (SELECT client_id FROM cmm_company WHERE client_id = #{clientId})
    </delete>

    <delete id="deleteAppGroupMappings">
        DELETE
        FROM cmm_app_group_map
        WHERE map_no IN
        <foreach collection="groupMappingNos" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
        AND #{clientId} = (SELECT client_id FROM cmm_company WHERE client_id = #{clientId})
    </delete>

    <delete id="deleteGroupMappingsByGrpNo">
        DELETE
        FROM cmm_group_map
        WHERE grp_no = #{grpNo}
    </delete>

    <select id="findGroupMappingsHistory" resultType="GroupMappingHistoryResponseDto">
        SELECT
        a.seq_no,
        a.map_no,
        a.grp_no,
        a.data_gbn,
        a.data_no,
        a.action,
        a.created_by,
        a.created_at,
        a.reg_ip,
        a.client_id,
        CASE WHEN g.grp_nm IS NULL THEN ag.app_grp_nm ELSE g.grp_nm END as grp_nm,
        CASE WHEN e.emp_nm IS NULL THEN d.dept_nm ELSE e.emp_nm END as data_nm,
        e2.emp_nm as reg_emp_nm
        FROM cmm_group_map_hst a
        LEFT OUTER JOIN cmm_emp e ON a.data_gbn = 'E' AND a.data_no = e.emp_no

        LEFT OUTER JOIN cmm_dept d ON a.data_gbn = 'D' AND a.data_no = d.dept_no
        LEFT OUTER JOIN cmm_emp e2 ON a.created_by = e2.emp_no
        LEFT OUTER JOIN cmm_group g ON a.grp_no = g.grp_no
        LEFT OUTER JOIN cmm_app_group ag ON a.grp_no = ag.app_grp_no
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="groupMappingHistoryRequestDto.startedAt != null and groupMappingHistoryRequestDto.endedAt != null">
                AND a.created_at BETWEEN #{groupMappingHistoryRequestDto.startedAt} and #{groupMappingHistoryRequestDto.endedAt}
            </if>
            <if test='groupMappingHistoryRequestDto.clientId != null'>
                AND a.client_id = #{groupMappingHistoryRequestDto.clientId}
            </if>
            <if test='groupMappingHistoryRequestDto.grpNo != null'>
                AND a.grp_no = #{groupMappingHistoryRequestDto.grpNo}
            </if>
            <if test='groupMappingHistoryRequestDto.action != null and groupMappingHistoryRequestDto.action != ""'>
                AND action = #{groupMappingHistoryRequestDto.action}
            </if>
            <if test='groupMappingHistoryRequestDto.dataGbn != null and groupMappingHistoryRequestDto.dataGbn != ""'>
                AND data_gbn = #{groupMappingHistoryRequestDto.dataGbn}
            </if>

            <if test='groupMappingHistoryRequestDto.dataNm != null and groupMappingHistoryRequestDto.dataNm != ""'>
                AND (
                e.emp_nm LIKE  CONCAT(CONCAT('%',#{groupMappingHistoryRequestDto.dataNm}),'%')
                OR
                d.dept_nm LIKE CONCAT(CONCAT('%',#{groupMappingHistoryRequestDto.dataNm}),'%')
                )
            </if>

            <if test='groupMappingHistoryRequestDto.regEmpNm != null and groupMappingHistoryRequestDto.regEmpNm != ""'>
                AND e2.emp_nm LIKE  CONCAT(CONCAT('%',#{groupMappingHistoryRequestDto.regEmpNm}),'%')
            </if>

        </trim>

        <include refid="common.sql.fragmentOrderBy">
            <property name="OrderBy" value="ORDER BY a.seq_no DESC"/>
        </include>
    </select>

    <insert id="insertGroupMappingsHistory" >
        INSERT INTO cmm_group_map_hst(seq_no,
        map_no, grp_no, data_gbn, data_no, action, created_by, created_at, reg_ip, client_id
        ) VALUES (<include refid="common.sql.seq"><property name="t" value="sq_cmm_group_map_hst"/></include>,
        #{mapNo}, #{grpNo}, #{dataGbn}, #{dataNo}, #{action}, #{createdBy}, #{createdAt}, #{regIp}, #{clientId}
        )
    </insert>



</mapper>